name: jfrog
on:
  workflow_dispatch:
env:
  CI: true
#   # This item has no matching transformer
#   ARTIFACTORY_ACCESS_TOKEN:
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
#     # 'script' was not transformed because there is no suitable equivalent in GitHub Actions
#     - name: script
#       arguments:
#       - key: scriptBlock
#         value:
#           isLiteral: true
#           value: |-
#             sh 'chmod +x mvnw'
#                                 // Regenerate Maven Wrapper files
#                                 sh 'mvn -N io.takari:maven:wrapper'
#                                 // Run the Maven build
#                                 sh './mvnw clean install'
  Upload_to_Artifactory:
    name: Upload to Artifactory
    runs-on: ubuntu-latest
    needs: Build
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
#     # 'script' was not transformed because there is no suitable equivalent in GitHub Actions
#     - name: script
#       arguments:
#       - key: scriptBlock
#         value:
#           isLiteral: true
#           value: "def accessToken = ARTIFACTORY_ACCESS_TOKEN\n                    // Use Docker image directly\n                    def dockerImage = 'releases-docker.jfrog.io/jfrog/jfrog-cli-v2:2.2.0'\n                    \n                    // Check if sudo is required\n                    def useSudo = sh(script: \"docker run --rm -v /var/lib/jenkins/workspace/new:/workspace ${{ env.dockerImage }} /bin/sh -c 'test -w /workspace'\", returnStatus: true) != 0\n\n                    // Run the Docker command with or without sudo\n                    def dockerCommand = useSudo ? 'sudo docker' : 'docker'\n                    \n                    // Execute commands inside the Docker container\n                    sh \"\"\"\n                        ${{ env.dockerCommand }} pull ${{ env.dockerImage }}\n                        ${{ env.dockerCommand }} run --rm -v \\$PWD:/workspace ${{ env.dockerImage }} /bin/sh -c \"cd /workspace && echo Printing current directory: && ls -al && echo Uploading artifact to JFrog... && jfrog rt upload --url http://34.239.119.229:8082/artifactory/ --access-token ${{ env.accessToken }} target/demo-0.0.1-SNAPSHOT.jar example-repo-local/\"\n                    \"\"\""
