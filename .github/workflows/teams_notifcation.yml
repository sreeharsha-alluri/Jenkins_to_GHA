name: 'Build and Notify'

description: 'Builds and notifies Microsoft Teams about the status of the workflow run.'

on:
  push:
    branches:
      - main
  pull_request: 
    branches:
      - main
  workflow_dispatch: # Trigger to allow manual execution from GitHub Actions UI

jobs:
  build_and_notify:
    runs-on: ubuntu-latest
    
    inputs:
      error-mention-id:
        description: 'ID for mentioning in case of error.'
        required: true
        default: 'apinapak@amd.com'
      error-mention-name:
        description: 'Name for mentioning in case of error.'
        required: true
        default: 'Pinapaka, Abhilash Sarath Teja'
      success-mention-id:
        description: 'ID for mentioning in case of success.'
        required: true
        default: 'sreehass@amd.com'
      success-mention-name:
        description: 'Name for mentioning in case of success.'
        required: true
        default: 'A S S K, Sreeharsha'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      #- name: Simulate error
      #  run: exit 1
      #  id: error
      
      - name: Get commit information
        if: always()
        id: commit_info
        run: |
          COMMIT_HASH=$(git rev-parse HEAD)
          BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
          echo "::set-output name=commit_hash::$COMMIT_HASH"
          echo "::set-output name=branch_name::$BRANCH_NAME"

      - name: Determine status and notification recipients
        id: status_and_recipients
        run: |
          if [ -n "${{ steps.error }}" ]; then
            MENTIONED_ID=${{ inputs.error-mention-id }}
            MENTIONED_NAME=${{ inputs.error-mention-name }}
            STATUS="FAIL ❌"
            COLOR="attention"
          else
            MENTIONED_ID=${{ inputs.success-mention-id }}
            MENTIONED_NAME=${{ inputs.success-mention-name }}
            STATUS="PASS ✅"
            COLOR="good"
          fi

          echo "::set-output name=status::$STATUS"
          echo "::set-output name=color::$COLOR"
          echo "::set-output name=mentionedId::$MENTIONED_ID"
          echo "::set-output name=mentionedName::$MENTIONED_NAME"

      - name: Send notification to Microsoft Teams
        if: always()
        run: |
          # Get the GitHub workflow run URL
          JOB_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          
          # Get the commit information from previous step
          COMMIT_HASH=${{ steps.commit_info.outputs.commit_hash }}
          BRANCH_NAME=${{ steps.commit_info.outputs.branch_name }}

          # Get the status and recipients from previous step
          STATUS=${{ steps.status_and_recipients.outputs.status }}
          COLOR=${{ steps.status_and_recipients.outputs.color }}
          MENTIONED_ID=${{ steps.status_and_recipients.outputs.mentionedId }}
          MENTIONED_NAME=${{ steps.status_and_recipients.outputs.mentionedName }}

          # Get the repository URL
          REPO_URL="[${{ github.repository }}](${{ github.event.repository.html_url }})"
          
          # Get the build number
          BUILD_NUMBER="${{ github.run_number }}"
          
          # Generate the payload for the notification
          payload='{
            "type": "message",
            "attachments": [
              {
                "contentType": "application/vnd.microsoft.card.adaptive",
                "content": {
                  "type": "AdaptiveCard",
                  "body": [
                    {
                      "type": "TextBlock",
                      "text": "<at>'"$MENTIONED_ID"'</at>",
                      "color": "'"$COLOR"'"
                    },
                    {
                      "type": "TextBlock",
                      "text": "**Job Name:** Build and Notify",
                      "color": "'"$COLOR"'"
                    },
                    {
                      "type": "TextBlock",
                      "text": "**Job URL:** [View Job]('"$JOB_URL"')",
                      "color": "'"$COLOR"'"
                    },
                    {
                      "type": "TextBlock",
                      "text": "**Status:** '"$STATUS"'",
                      "color": "'"$COLOR"'"
                    },
                    {
                      "type": "TextBlock",
                      "text": "**Repository URL:** '"$REPO_URL"'",
                      "color": "'"$COLOR"'"
                    },
                    {
                      "type": "TextBlock",
                      "text": "**Build Number:** '"$BUILD_NUMBER"'",
                      "color": "'"$COLOR"'"
                    },
                    {
                      "type": "TextBlock",
                      "text": "**Branch Name:** '"$BRANCH_NAME"'",
                      "color": "'"$COLOR"'"
                    },
                    {
                      "type": "TextBlock",
                      "text": "**Latest Commit:** '"$COMMIT_HASH"'",
                      "color": "'"$COLOR"'"
                    }
                  ],
                  "msteams": {
                    "entities": [
                      {
                        "type": "mention",
                        "text": "<at>'"$MENTIONED_ID"'</at>",
                        "mentioned": {
                          "id": "'"$MENTIONED_ID"'",
                          "name": "'"$MENTIONED_NAME"'"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }'
          
          # Send the payload to Microsoft Teams
          echo "$payload" | curl -X POST -H 'Content-Type: application/json' -d @- 'https://amdcloud.webhook.office.com/webhookb2/133d4f16-689b-4281-a94b-44725b948c77@3dd8961f-e488-4e60-8e11-a82d994e183d/IncomingWebhook/20c43fc799fd49e9813582813c638323/f9e22351-f1c9-494f-88c5-8e04accf2ffe'
